name: Build
on: [push]
jobs:

  # TODO: Uncomment
  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
  #   env:
  #     GOLANGCI_VERSION: v1.39.0
  #   steps:

  #   - name: Set up Go
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: 1.16.2
  #     id: go

  #   - name: Check out code
  #     uses: actions/checkout@v2

  #   - name: Cache Go Modules
  #     uses: actions/cache@v2
  #     with:
  #       path: ~/go/pkg/mod
  #       key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
  #       restore-keys: |
  #         ${{ runner.os }}-go-

  #   - name: Cache golangci-lint
  #     id: cache-gloangci-lint
  #     uses: actions/cache@v2
  #     with:
  #       path: ~/go/bin/golangci-lint
  #       key: ${{ runner.os }}-golangci-lint-${{ env.GOLANGCI_VERSION }}
  #       restore-keys: |
  #         ${{ runner.os }}-golangci-lint-

  #   - name: Install golangci-lint
  #     if: steps.cache-gloangci-lint.outputs.cache-hit != 'true'
  #     run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b ~/go/bin ${{ env.GOLANGCI_VERSION }}

  #   - name: Lint
  #     run: golangci-lint run

  #   - name: Test
  #     run: go test ./...

  release:
    # TODO: Uncomment
    # needs: build
    # TODO: Match version spec
    if: contains(github.ref, 'refs/tags/v')
    name: Create Release
    runs-on: ubuntu-latest
    env:
      DOCKER_REPOSITORY: ${{ github.repository_owner }}/riser-server
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/Dockerfile
          build-args: VERSION=${{ steps.get_version.outputs.VERSION }}
          tags: "ghcr.io/${{ env.DOCKER_REPOSITORY }}:${{ steps.get_version.outputs.VERSION }}"
      # TODO: Uncomment and update Docker image URL
      # - name: Create GitHub Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: true
      #     prerelease: true
      #     body: |
      #       Docker image available at https://hub.docker.com/r/riserplatform/riser-server

